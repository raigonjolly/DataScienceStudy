http://git-scm.com/downloads

--configuration username and email 
git config --global user.name <username>
git config --global user.email <emailaddress>

--see username and email
git config --list

exit

Web Development :
Git Hub


mkdir ~/DataScienceStudy
ls to list files
cd ~/DataScienceStudy
git init
git remote add orgin https://github.com/raigonjolly/DataScienceStudy.git
--fork
git clone https://github.com/raigonjolly/DataScienceStudy.git

------------

git add .
git add -u
git add -A
git commit -m "message"
git push
git checkout -b branchname
--tell what branch you are on
git branch
git checkout master



	
Our alternative approach has become git fetch; git reset --hard origin/master as part of our workflow. 
It blows away local changes, keeps you up to date with master BUT makes sure you don't just pull in new changes 
on top on current changes and make a mess. We've used it for a while and it basically feels a lot safer in practice.
Just be sure to add/commit/stash any work-in-progress first !
